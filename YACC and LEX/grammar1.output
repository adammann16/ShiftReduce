Terminals unused in grammar

   ID
   NUM
   STRING
   SHARED
   PRIVATE
   SEMAPHORE
   RESTRICT
   PROGRAM
   PROCEDURE
   PROCESS
   P
   V
   ASSERT
   PRINT
   WHILE
   IF
   THEN
   ELSE
   PLUS
   MINUS
   TIMES
   MOD
   AND
   OR
   NOT
   LE
   LT
   EQ
   GE
   GT
   NE
   ASSIGN
   LPAREN
   RPAREN
   LBRACE
   RBRACE
   LBRACKET
   RBRACKET
   COMMA
   SEMICOLON
   TRUE


State 1conflicts: 1 shift/reduce


Grammar

    0 $accept: A $end

    1 A: B C INTEGER
    2  | C INTEGER

    3 B: INTEGER INTEGER

    4 C: INTEGER
    5  | C INTEGER


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258)
NUM (259)
STRING (260)
SHARED (261)
PRIVATE (262)
INTEGER (263) 1 2 3 4 5
SEMAPHORE (264)
RESTRICT (265)
PROGRAM (266)
PROCEDURE (267)
PROCESS (268)
P (269)
V (270)
ASSERT (271)
PRINT (272)
WHILE (273)
IF (274)
THEN (275)
ELSE (276)
PLUS (277)
MINUS (278)
TIMES (279)
MOD (280)
AND (281)
OR (282)
NOT (283)
LE (284)
LT (285)
EQ (286)
GE (287)
GT (288)
NE (289)
ASSIGN (290)
LPAREN (291)
RPAREN (292)
LBRACE (293)
RBRACE (294)
LBRACKET (295)
RBRACKET (296)
COMMA (297)
SEMICOLON (298)
TRUE (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
A (46)
    on left: 1 2, on right: 0
B (47)
    on left: 3, on right: 1
C (48)
    on left: 4 5, on right: 1 2 5


State 0

    0 $accept: . A $end

    INTEGER  shift, and go to state 1

    A  go to state 2
    B  go to state 3
    C  go to state 4


State 1

    3 B: INTEGER . INTEGER
    4 C: INTEGER .

    INTEGER  shift, and go to state 5

    INTEGER  [reduce using rule 4 (C)]


State 2

    0 $accept: A . $end

    $end  shift, and go to state 6


State 3

    1 A: B . C INTEGER

    INTEGER  shift, and go to state 7

    C  go to state 8


State 4

    2 A: C . INTEGER
    5 C: C . INTEGER

    INTEGER  shift, and go to state 9


State 5

    3 B: INTEGER INTEGER .

    $default  reduce using rule 3 (B)


State 6

    0 $accept: A $end .

    $default  accept


State 7

    4 C: INTEGER .

    $default  reduce using rule 4 (C)


State 8

    1 A: B C . INTEGER
    5 C: C . INTEGER

    INTEGER  shift, and go to state 10


State 9

    2 A: C INTEGER .
    5 C: C INTEGER .

    INTEGER   reduce using rule 5 (C)
    $default  reduce using rule 2 (A)


State 10

    1 A: B C INTEGER .
    5 C: C INTEGER .

    INTEGER   reduce using rule 5 (C)
    $default  reduce using rule 1 (A)
